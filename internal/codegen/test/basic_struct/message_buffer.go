// Code generated by Gojay. DO NOT EDIT.
package basic_struct

import (
	"go.sia.tech/encodegen/encodegen"
)

// MarshalBuffer implements MarshalerBuffer
func (m *Message) MarshalBuffer(b *encodegen.ObjBuffer) {
	b.WriteUint64(uint64(uint64(m.Id)))
	b.WritePrefixedBytes([]byte([]byte(m.Name)))
	b.WriteUint64(uint64(len(m.Ints)))
	for i := range m.Ints {

		b.WriteUint64(uint64(m.Ints[i]))

	}
	if m.SubMessageX != nil {
		b.WriteBool(true)
		(*SubMessage)(m.SubMessageX).MarshalBuffer(b)
	} else {
		b.WriteBool(false)
	}
	b.WriteUint64(uint64(len(m.MessagesX)))
	for i := range m.MessagesX {

		if m.MessagesX[i] != nil {
			b.WriteBool(true)

			m.MessagesX[i].MarshalBuffer(b)

		} else {
			b.WriteBool(false)
		}

	}
	(*SubMessage)(&m.SubMessageY).MarshalBuffer(b)
	b.WriteUint64(uint64(len(m.MessagesY)))
	for i := range m.MessagesY {

		m.MessagesY[i].MarshalBuffer(b)

	}
	if m.IsTrue != nil {
		b.WriteBool(true)
		b.WriteBool(bool(bool(*m.IsTrue)))
	} else {
		b.WriteBool(false)
	}
	b.WriteUint64(uint64(len(m.Payload)))
	for i := range m.Payload {

		b.WriteByte(byte(m.Payload[i]))

	}
}

// UnmarshalBuffer implements gojay's UnmarshalerBuffer
func (m *Message) UnmarshalBuffer(b *encodegen.ObjBuffer) error {
	m.Id = int(b.ReadUint64())
	m.Name = string(b.ReadPrefixedBytes())
	m.Ints = make([]int, int(b.ReadUint64()))
	for i := range m.Ints {

		m.Ints[i] = int(b.ReadUint64())

	}
	if b.ReadBool() {
		m.SubMessageX = new(SubMessage)
		(*SubMessage)(m.SubMessageX).UnmarshalBuffer(b)
	}
	m.MessagesX = make([]*SubMessage, int(b.ReadUint64()))
	for i := range m.MessagesX {

		if b.ReadBool() {
			m.MessagesX[i] = new(SubMessage)
			m.MessagesX[i].UnmarshalBuffer(b)
		}

	}
	(*SubMessage)(&m.SubMessageY).UnmarshalBuffer(b)
	m.MessagesY = make([]SubMessage, int(b.ReadUint64()))
	for i := range m.MessagesY {

		(*SubMessage)(&m.MessagesY[i]).UnmarshalBuffer(b)

	}
	if b.ReadBool() {
		m.IsTrue = new(bool)
		*m.IsTrue = bool(b.ReadBool())
	}
	m.Payload = make([]byte, int(b.ReadUint64()))
	for i := range m.Payload {

		m.Payload[i] = byte(b.ReadByte())

	}

	return b.Err()
}

// MarshalBuffer implements MarshalerBuffer
func (m *SubMessage) MarshalBuffer(b *encodegen.ObjBuffer) {
	b.WriteUint64(uint64(uint64(m.Id)))
	b.WritePrefixedBytes([]byte([]byte(m.Description)))
}

// UnmarshalBuffer implements gojay's UnmarshalerBuffer
func (m *SubMessage) UnmarshalBuffer(b *encodegen.ObjBuffer) error {
	m.Id = int(b.ReadUint64())
	m.Description = string(b.ReadPrefixedBytes())

	return b.Err()
}
