// Code generated by encodegen. DO NOT EDIT.

package alias_struct

import (
	"go.sia.tech/encodegen/pkg/encodegen"
)

// MarshalBuffer implements MarshalerBuffer

func (i *AliasInt) MarshalBuffer(b *encodegen.ObjBuffer) {
	if i != nil {

		b.WriteUint64(uint64(int(*i)))

	}

}

// UnmarshalBuffer implements encodegen's UnmarshalerBuffer
func (i *AliasInt) UnmarshalBuffer(b *encodegen.ObjBuffer) error {

	if i != nil {

		*i = AliasInt(int(b.ReadUint64()))

	}
	return b.Err()
}

// MarshalBuffer implements MarshalerBuffer

func (a *AliasIntArray) MarshalBuffer(b *encodegen.ObjBuffer) {
	if a != nil {

		b.WriteUint64(uint64(len(*a)))

		temp := []int(*a)

		for i := range temp {

			b.WriteUint64(uint64(temp[i]))

		}

	}

}

// UnmarshalBuffer implements encodegen's UnmarshalerBuffer
func (a *AliasIntArray) UnmarshalBuffer(b *encodegen.ObjBuffer) error {

	if a != nil {

		var length int = 0

		length = int(b.ReadUint64())
		if length > 0 {
			temp := make([]int, length)

			for i := range temp {

				temp[i] = int(b.ReadUint64())

			}

			*a = AliasIntArray(temp)
		}

	}
	return b.Err()
}

// MarshalBuffer implements MarshalerBuffer

func (a *AliasIntPointerArray) MarshalBuffer(b *encodegen.ObjBuffer) {
	if a != nil {

		b.WriteUint64(uint64(len(*a)))

		temp := []*int(*a)

		for i := range temp {

			if temp[i] != nil {
				b.WriteBool(true)

				b.WriteUint64(uint64(*temp[i]))

			} else {
				b.WriteBool(false)
			}

		}

	}

}

// UnmarshalBuffer implements encodegen's UnmarshalerBuffer
func (a *AliasIntPointerArray) UnmarshalBuffer(b *encodegen.ObjBuffer) error {

	if a != nil {

		var length int = 0

		length = int(b.ReadUint64())
		if length > 0 {
			temp := make([]*int, length)

			for i := range temp {

				if b.ReadBool() {
					temp[i] = new(int)
					*temp[i] = int(b.ReadUint64())
				}

			}

			*a = AliasIntPointerArray(temp)
		}

	}
	return b.Err()
}

// MarshalBuffer implements MarshalerBuffer

func (m *AliasSubMessage) MarshalBuffer(b *encodegen.ObjBuffer) {
	if m != nil {

		(*SubMessage)(m).MarshalBuffer(b)

	}

}

// UnmarshalBuffer implements encodegen's UnmarshalerBuffer
func (m *AliasSubMessage) UnmarshalBuffer(b *encodegen.ObjBuffer) error {

	if m != nil {

		(*SubMessage)(m).UnmarshalBuffer(b)

	}
	return b.Err()
}

// MarshalBuffer implements MarshalerBuffer

func (a *AliasSubMessageArray) MarshalBuffer(b *encodegen.ObjBuffer) {
	if a != nil {

		b.WriteUint64(uint64(len(*a)))

		temp := []SubMessage(*a)

		for i := range temp {

			(*SubMessage)(&temp[i]).MarshalBuffer(b)

		}

	}

}

// UnmarshalBuffer implements encodegen's UnmarshalerBuffer
func (a *AliasSubMessageArray) UnmarshalBuffer(b *encodegen.ObjBuffer) error {

	if a != nil {

		var length int = 0

		length = int(b.ReadUint64())
		if length > 0 {
			temp := make([]SubMessage, length)

			for i := range temp {

				(*SubMessage)(&temp[i]).UnmarshalBuffer(b)

			}

			*a = AliasSubMessageArray(temp)
		}

	}
	return b.Err()
}

// MarshalBuffer implements MarshalerBuffer

func (a *AliasSubMessagePointerArray) MarshalBuffer(b *encodegen.ObjBuffer) {
	if a != nil {

		b.WriteUint64(uint64(len(*a)))

		temp := []*SubMessage(*a)

		for i := range temp {

			if temp[i] != nil {
				b.WriteBool(true)

				(*SubMessage)(temp[i]).MarshalBuffer(b)

			} else {
				b.WriteBool(false)
			}

		}

	}

}

// UnmarshalBuffer implements encodegen's UnmarshalerBuffer
func (a *AliasSubMessagePointerArray) UnmarshalBuffer(b *encodegen.ObjBuffer) error {

	if a != nil {

		var length int = 0

		length = int(b.ReadUint64())
		if length > 0 {
			temp := make([]*SubMessage, length)

			for i := range temp {

				if b.ReadBool() {
					temp[i] = new(SubMessage)
					(*SubMessage)(temp[i]).UnmarshalBuffer(b)

				}

			}

			*a = AliasSubMessagePointerArray(temp)
		}

	}
	return b.Err()
}

// MarshalBuffer implements MarshalerBuffer

func (i *DoubleAliasInt) MarshalBuffer(b *encodegen.ObjBuffer) {
	if i != nil {

		(*AliasInt)(i).MarshalBuffer(b)

	}

}

// UnmarshalBuffer implements encodegen's UnmarshalerBuffer
func (i *DoubleAliasInt) UnmarshalBuffer(b *encodegen.ObjBuffer) error {

	if i != nil {

		(*AliasInt)(i).UnmarshalBuffer(b)

	}
	return b.Err()
}

// MarshalBuffer implements MarshalerBuffer

func (m *DoubleAliasSubMessage) MarshalBuffer(b *encodegen.ObjBuffer) {
	if m != nil {

		(*AliasSubMessage)(m).MarshalBuffer(b)

	}

}

// UnmarshalBuffer implements encodegen's UnmarshalerBuffer
func (m *DoubleAliasSubMessage) UnmarshalBuffer(b *encodegen.ObjBuffer) error {

	if m != nil {

		(*AliasSubMessage)(m).UnmarshalBuffer(b)

	}
	return b.Err()
}

// MarshalBuffer implements MarshalerBuffer

func (m *Message) MarshalBuffer(b *encodegen.ObjBuffer) {
	if m != nil {

		b.WriteUint64(uint64(m.Id))

		(*SubMessage)(&m.Sub).MarshalBuffer(b)

		(*AliasSubMessage)(&m.AliasSubMessageField).MarshalBuffer(b)

		b.WriteUint64(uint64(len(m.ArrayAliasSubMessageField)))

		for i := range m.ArrayAliasSubMessageField {

			m.ArrayAliasSubMessageField[i].MarshalBuffer(b)

		}

		(*DoubleAliasSubMessage)(&m.DoubleAliasSubMessageField).MarshalBuffer(b)

		if m.PointerDoubleAliasSubMessageField != nil {
			b.WriteBool(true)
			(*DoubleAliasSubMessage)(m.PointerDoubleAliasSubMessageField).MarshalBuffer(b)
		} else {
			b.WriteBool(false)
		}

		(*AliasInt)(&m.AliasIntField).MarshalBuffer(b)

		if m.PointerAliasIntField != nil {
			b.WriteBool(true)
			(*AliasInt)(m.PointerAliasIntField).MarshalBuffer(b)
		} else {
			b.WriteBool(false)
		}

		(*AliasIntArray)(&m.AliasIntArrayField).MarshalBuffer(b)

		(*AliasIntPointerArray)(&m.AliasIntPointerArrayField).MarshalBuffer(b)

		(*AliasSubMessageArray)(&m.AliasSubMessageArrayField).MarshalBuffer(b)

		(*AliasSubMessagePointerArray)(&m.AliasSubMessagePointerArrayField).MarshalBuffer(b)

		b.WriteUint64(uint64(len(m.ArrayAliasSubMessagePointerArrayField)))

		for i := range m.ArrayAliasSubMessagePointerArrayField {

			m.ArrayAliasSubMessagePointerArrayField[i].MarshalBuffer(b)

		}

		(*DoubleAliasInt)(&m.DoubleAliasIntField).MarshalBuffer(b)

	}

}

// UnmarshalBuffer implements encodegen's UnmarshalerBuffer
func (m *Message) UnmarshalBuffer(b *encodegen.ObjBuffer) error {

	if m != nil {

		var length int = 0

		m.Id = int(b.ReadUint64())

		(*SubMessage)(&m.Sub).UnmarshalBuffer(b)

		(*AliasSubMessage)(&m.AliasSubMessageField).UnmarshalBuffer(b)

		length = int(b.ReadUint64())
		if length > 0 {
			m.ArrayAliasSubMessageField = make([]AliasSubMessage, length)

			for i := range m.ArrayAliasSubMessageField {

				(*AliasSubMessage)(&m.ArrayAliasSubMessageField[i]).UnmarshalBuffer(b)

			}
		}

		(*DoubleAliasSubMessage)(&m.DoubleAliasSubMessageField).UnmarshalBuffer(b)

		if b.ReadBool() {
			if m.PointerDoubleAliasSubMessageField == nil {
				m.PointerDoubleAliasSubMessageField = new(DoubleAliasSubMessage)
			}
			(*DoubleAliasSubMessage)(m.PointerDoubleAliasSubMessageField).UnmarshalBuffer(b)
		}

		(*AliasInt)(&m.AliasIntField).UnmarshalBuffer(b)

		if b.ReadBool() {
			if m.PointerAliasIntField == nil {
				m.PointerAliasIntField = new(AliasInt)
			}
			(*AliasInt)(m.PointerAliasIntField).UnmarshalBuffer(b)
		}

		(*AliasIntArray)(&m.AliasIntArrayField).UnmarshalBuffer(b)

		(*AliasIntPointerArray)(&m.AliasIntPointerArrayField).UnmarshalBuffer(b)

		(*AliasSubMessageArray)(&m.AliasSubMessageArrayField).UnmarshalBuffer(b)

		(*AliasSubMessagePointerArray)(&m.AliasSubMessagePointerArrayField).UnmarshalBuffer(b)

		length = int(b.ReadUint64())
		if length > 0 {
			m.ArrayAliasSubMessagePointerArrayField = make([]AliasSubMessagePointerArray, length)

			for i := range m.ArrayAliasSubMessagePointerArrayField {

				(*AliasSubMessagePointerArray)(&m.ArrayAliasSubMessagePointerArrayField[i]).UnmarshalBuffer(b)

			}
		}

		(*DoubleAliasInt)(&m.DoubleAliasIntField).UnmarshalBuffer(b)

	}
	return b.Err()
}

// MarshalBuffer implements MarshalerBuffer

func (m *SubMessage) MarshalBuffer(b *encodegen.ObjBuffer) {
	if m != nil {

		b.WriteUint64(uint64(m.Id))

		b.WritePrefixedBytes([]byte(m.Description))

		b.WriteUint64(uint64(len(m.Strings)))

		for i := range m.Strings {

			b.WritePrefixedBytes([]byte(m.Strings[i]))

		}

	}

}

// UnmarshalBuffer implements encodegen's UnmarshalerBuffer
func (m *SubMessage) UnmarshalBuffer(b *encodegen.ObjBuffer) error {

	if m != nil {

		var length int = 0

		m.Id = int(b.ReadUint64())

		m.Description = string(b.ReadPrefixedBytes())

		length = int(b.ReadUint64())
		if length > 0 {
			m.Strings = make([]string, length)

			for i := range m.Strings {

				m.Strings[i] = string(b.ReadPrefixedBytes())

			}
		}

	}
	return b.Err()
}
