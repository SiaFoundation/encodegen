// Code generated by encodegen. DO NOT EDIT.
package importedtype

import (
	encoding "gitlab.com/NebulousLabs/encoding"
	encodegen "go.sia.tech/encodegen/pkg/encodegen"
)

var (
	EncodegenSizeofEmptyHash     = len(encoding.Marshal(Hash{}))
	EncodegenSizeofEmptyImported = len(encoding.Marshal(Imported{}))
)

// MarshalBuffer implements MarshalerBuffer
func (h *Hash) MarshalBuffer(b *encodegen.ObjBuffer) {
	if h != nil {

		temp := [40]byte(*h)
		b.Write([]byte(temp[:]))

	}
}

// UnmarshalBuffer implements encodegen's UnmarshalerBuffer
func (h *Hash) UnmarshalBuffer(b *encodegen.ObjBuffer) error {
	if h != nil {
		var length int = 0
		_ = length

		temp := [40]byte(*h)
		b.Read(temp[:])
		*h = temp

	}
	return b.Err()
}

// MarshalBuffer implements MarshalerBuffer
func (i *Imported) MarshalBuffer(b *encodegen.ObjBuffer) {
	if i != nil {

		b.WriteUint64(uint64(i.A))

		b.WriteUint64(uint64(len(i.B)))
		b.Write(i.B)

	}
}

// UnmarshalBuffer implements encodegen's UnmarshalerBuffer
func (i *Imported) UnmarshalBuffer(b *encodegen.ObjBuffer) error {
	if i != nil {
		var length int = 0
		_ = length

		i.A = int(b.ReadUint64())

		length = int(b.ReadPrefix(1))
		if length > 0 {
			if len(i.B) < length {
				i.B = make([]byte, length)
			}
			i.B = i.B[:length]
			b.Read(i.B)
		}

	}
	return b.Err()
}
